using System.Diagnostics.CodeAnalysis;

using Egw.PubManagement.Persistence.Enums;

using WhiteEstate.DocFormat;
namespace Egw.PubManagement.Persistence.Entities;

/// <summary>
/// MP3 File
/// </summary>
[SuppressMessage("ReSharper", "UnusedAutoPropertyAccessor.Local")]
public class Mp3File : ITimeStampedEntity
{
    /// <summary>
    /// Id
    /// </summary>
    public ParaId ParaId { get; private set; }

    /// <summary>
    /// Voice type
    /// </summary>
    public VoiceTypeEnum VoiceType { get; private set; }

    /// <summary>
    /// Voice is autogenerated
    /// </summary>
    public bool IsGenerated { get; private set; }

    /// <summary>
    /// Publication Id
    /// </summary>
    public int PublicationId { get; private set; }

    /// <summary>
    /// Element Id
    /// </summary>
    public int ElementId { get; private set; }

    /// <summary>
    /// Mp3 File Name
    /// </summary>
    public string Filename { get; private set; }

    /// <summary>
    /// File size
    /// </summary>
    public long FileSize { get; private set; }

    /// <summary>
    /// Duration in seconds
    /// </summary>
    public long Duration { get; private set; }


    /// <inheritdoc />
    public DateTimeOffset CreatedAt { get; private set; }

    /// <inheritdoc />
    public DateTimeOffset UpdatedAt { get; private set; }

    /// <summary>
    /// Creates a new MP3 File entity
    /// </summary>
    public Mp3File(ParaId paraId, VoiceTypeEnum voiceType, string filename,
        long fileSize, long duration,
        DateTimeOffset createdAt)
    {
        ParaId = paraId;
        VoiceType = voiceType;
        PublicationId = paraId.PublicationId;
        ElementId = paraId.ElementId;
        Filename = filename;
        FileSize = fileSize;
        Duration = duration;
        CreatedAt = createdAt;
        UpdatedAt = createdAt;
    }
}